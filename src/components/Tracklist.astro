---
interface Props {
    tracks: Array<any>;
}

const { tracks } = Astro.props;
console.log(tracks)
---

<div>
    {
        tracks.map(track => (
          <p>
            {
              track.previewURL ? (
              <button id={track.id} class="play-button">Play</button>
              <audio id={"audio_" + track.id} src={track.previewURL} class="audio-preview"/>
              ) :
              null
            }
            {track.trackNumber}. {track.name} | {track.artists.map(a => a.name).join(", ")}
            <a href={track.externalURL.spotify} target="_blank">Open on Spotify</a>
          </p>
        ))
      }
</div>

<script>

    let volume = 0.5;
  
  [...document.querySelectorAll('.play-button')].forEach(function(item) {
    item.addEventListener('click', function() {
      let id = item.id;
      let audio = document.getElementById("audio_" + id) as HTMLAudioElement;
      if (audio.paused) {
        stopAllAudios(audio); 
        audio.play();
        item.textContent = "Stop";
      } else {
        audio.pause();
        item.textContent = "Play";
      }
    });
  });
  
  [...document.querySelectorAll('audio')].forEach(function(item) {
    item.addEventListener('ended', function() {
      const button = document.getElementById(item.id.replace("audio_", ""))
      button.textContent = "Play";
    });
  });
  
  function stopAllAudios(exceptAudio = null) {
    const audios = document.querySelectorAll('audio');
    audios.forEach(function(audio) {
      if (audio !== exceptAudio) {
        const button = document.getElementById(audio.id.replace("audio_", ""))
        audio.pause();
        audio.currentTime = 0;
        button.textContent = "Play";
      }
    });
  }
  </script>
  