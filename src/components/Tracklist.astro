---
import Play from "../icons/play.astro";
import Pause from "../icons/pause.astro";
import SpotifyIcon from "../icons/spotify.astro";

interface Props {
    tracks: Array<any>;
}

const { tracks } = Astro.props;

function msToMinutesAndSeconds(ms) {
    let minutes = Math.floor(ms / 60000);
    let seconds = Math.floor((ms % 60000) / 1000);
    return minutes + ":" + (seconds < 10 ? "0" : "") + seconds;
}
---

<div class="tracklist__container">
  {
      tracks.map(track => (
        <p id={track.id} class="tracklist__item">
          {
            track.previewURL ? (
            <>
              <audio id={"audio_" + track.id} src={track.previewURL} class="audio-preview"/>
              <Pause id={"pause_" + track.id} class:list={"hide"} />
            </>
            ) :
            null
          }
          <span><span id={"track__number_" + track.id}>{track.trackNumber}.</span> <b>{track.name}</b></span>
          <span>{msToMinutesAndSeconds(track.duration)}</span>
        </p>
      ))
    }
</div>

<style>
.tracklist__container {
  display: flex;
  flex-direction: column;
  width: fit-content;
  padding: 15px 0;
}

.tracklist__item {
  padding: 10px;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 50px;
  cursor: pointer;
}

.tracklist__item:hover {
  background-color: var(--color-hover);
}

.tracklist__container > p:not(:last-child) {
  border-bottom: solid 1px #000;
}

.hide {
  display: none;
}
</style>

<script>
let volume = 0.4;

[...document.querySelectorAll('.tracklist__item')].forEach(function(item) {
  item.addEventListener('click', function() {
    let id = item.id;
    let audio = document.getElementById("audio_" + id) as HTMLAudioElement;
    const pauseIcon = document.getElementById("pause_" + id);
    const trackNumberElement = document.getElementById("track__number_" + id);
    console.log(trackNumberElement)

    audio.volume = volume;
    
    if (audio.paused) {
      stopAllAudios(audio);
      audio.play();
      pauseIcon.classList.remove('hide');
      trackNumberElement.classList.add('hide');
    } else {
      audio.pause();
      pauseIcon.classList.add('hide');
      trackNumberElement.classList.remove('hide');
    }
  });
});

[...document.querySelectorAll('audio')].forEach(function(item) {
  item.addEventListener('ended', function() {
    const pauseIcon = document.getElementById("pause_" + item.id.replace("audio_", ""));
    const trackNumberElement = document.getElementById("track__number_" + item.id.replace("audio_", ""));
    pauseIcon.classList.add('hide');
    trackNumberElement.classList.remove('hide');
  });
});

function stopAllAudios(exceptAudio = null) {
  const audios = document.querySelectorAll('audio');
  audios.forEach(function(audio) {
    if (audio !== exceptAudio) {
      const pauseIcon = document.getElementById("pause_" + audio.id.replace("audio_", ""));
      const trackNumberElement = document.getElementById("track__number_" + audio.id.replace("audio_", ""));
      audio.pause();
      audio.currentTime = 0;
      pauseIcon.classList.add('hide');
      trackNumberElement.classList.remove('hide');
    }
  });
}
</script>